import type { RestEndpointMethodTypes } from "@octokit/rest";
import type { PLazy } from "../PLazy.js";
type ForkConfig = RestEndpointMethodTypes["repos"]["createFork"]["parameters"];
export declare const forkRepository: (key: string, { githubAPIKey, parameters, }: {
    githubAPIKey: string;
    parameters: ForkConfig;
}) => Promise<{
    repository: string;
    branch: string;
} | undefined>;
export type ForkReturn = PLazy<Helpers> & Helpers;
export type ForkOptions = string | readonly string[] | ForkConfig | (ForkConfig | string)[];
/**
 * @description Forks a repository in github, requires authentication via Codemod CLI and Github permissions.
 * @param urlOrParameters - The URL of the repository to fork or an array of URLs to fork.
 * @param callback - A callback function to run after the fork is complete.
 */
export declare function forkLogic(urlOrParameters: ForkOptions, callback?: (helpers: Helpers) => void | Promise<void>): ForkReturn;
export declare const fork: typeof forkLogic;
declare const helpers: {
    clone: typeof import("../git/clone.js").cloneLogic;
    pr: typeof import("./pr.js").prLogic;
};
export type Helpers = typeof helpers;
export {};
