import type { PLazy } from "./PLazy.js";
export type CodemodReturn = PLazy<CodemodHelpers> & CodemodHelpers;
/**
 * Run a codemod in current working directory
 * @param name The name of the codemod (check for available codemods at https://codemod.com/registry)
 * @param args Arguments to pass to the codemod, e.g. `{ dry: true }`, where `dry` is a flag that the codemod accepts
 *
 * @example
 * ```ts
 * // Simple run
 * await codemod("valibot/upgrade-v0.31");
 * ```
 *
 * @example
 * ```ts
 * // Run with arguments
 * await codemod("valibot/upgrade-v0.31", { dry: true });
 * ```
 *
 * @example
 * ```ts
 * // Chaining codemods
 * await codemod("valibot/upgrade-v0.31")
 *   .codemod("valibot/upgrade-v0.32")
 *   .codemod("valibot/upgrade-v0.33");
 * ```
 */
export declare function codemodLogic(name: string, args?: Record<string, string | number | boolean | (string | number | boolean)[]>): CodemodReturn;
export declare const codemod: typeof codemodLogic;
declare const codemodHelpers: {
    codemod: typeof codemodLogic;
    exec: typeof import("./exec.js").execLogic;
};
type CodemodHelpers = typeof codemodHelpers;
export {};
