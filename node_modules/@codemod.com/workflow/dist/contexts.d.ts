import { AsyncLocalStorage } from "node:async_hooks";
import type { NapiConfig, SgNode } from "@ast-grep/napi";
import type { FileContext } from "./contexts/FileContext.js";
import { GitContext } from "./contexts/GitContext.js";
export declare const registerContext: <T>(name: string, ctx: AsyncLocalStorage<T>) => AsyncLocalStorage<T>;
export type AstGrepNodeContext = {
    query: string | NapiConfig;
    node: SgNode;
};
export declare const parentContextLegacy: AsyncLocalStorage<(...args: any[]) => any>;
export declare const getParentContext: () => (...args: any[]) => any;
export declare const gitContext: AsyncLocalStorage<GitContext>;
export declare const astGrepNodeContext: AsyncLocalStorage<AstGrepNodeContext>;
export declare const describeContext: AsyncLocalStorage<{
    name: string;
}>;
export declare const migrateContext: AsyncLocalStorage<{
    name: string;
}>;
export declare const cwdContext: AsyncLocalStorage<{
    cwd: string;
}>;
export declare const parentCwdContext: AsyncLocalStorage<{
    cwd: string;
}>;
export declare const fileContext: AsyncLocalStorage<FileContext>;
export declare const repositoryContext: AsyncLocalStorage<{
    repository: string;
    branch: string;
    forkedFrom?: string;
}>;
export declare const repositoriesContext: AsyncLocalStorage<{
    repositories: string[];
}>;
export declare const getContextsSnapshot: () => any[][];
export declare const getAstGrepNodeContext: () => AstGrepNodeContext;
export declare const getCwdContext: () => {
    cwd: string;
};
export declare const getParentCwdContext: () => {
    cwd: string;
};
export declare const getFileContext: () => FileContext;
export declare const getGitContext: () => GitContext;
export declare const getRepositoryContext: () => {
    repository: string;
    branch: string;
    forkedFrom?: string;
};
export declare const getRepositoriesContext: () => {
    repositories: string[];
};
export declare const getDescribeContext: () => {
    name: string;
};
