/**
 * @description Map each found with astGrep node and return resulting array. Could be used to retrieve some information from code.
 * @param callback - Callback function that will be called for each found node.
 * @example
 * ```ts
 * // Retrieve first argument for every console.log expression
 * await astGrep`console.log($A)`
 *   .map(({ getMatch }) => getMatch('A'))
 * ```
 */
export declare function mapLogic<CALLBACK extends (helpers: Helpers) => ReturnType<CALLBACK> | Promise<ReturnType<CALLBACK>>, RETURN extends ReturnType<CALLBACK>>(callback: CALLBACK): Promise<RETURN[]>;
export declare const map: typeof mapLogic;
declare const helpers: {
    getNode: () => import("@ast-grep/napi").SgNode;
    getMatch: (m: string) => import("@ast-grep/napi").SgNode | null;
    getMultipleMatches: (m: string) => import("@ast-grep/napi").SgNode[];
};
export type Helpers = typeof helpers;
export {};
